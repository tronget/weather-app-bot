version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: weather-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ${DB_NETWORK}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  weather-bot:
    build: .
    container_name: weather-bot-app
    restart: unless-stopped
    environment:
      # Telegram and Weather API keys
      TELEGRAM_APIKEY: ${TELEGRAM_APIKEY}
      OPENWEATHER_APIKEY: ${OPENWEATHER_APIKEY}
      
      # Database configuration
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ${DB_NETWORK}
    volumes:
      - ./logs:/root/logs

volumes:
  postgres_data:
    driver: local

networks:
  weather-bot-network:
    driver: bridge
